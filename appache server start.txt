
start and run appache server on ec2 instance
--------------------------------------------

	#!/bin/bash
	yum update -y
	yum install -y httpd.x86_64
	systemctl start httpd.service
	systemctl enable httpd.service
	echo “Hello World from $(hostname -f)” > /var/www/html/index.html

2) Launching an nginx server home :/usr/share/nginx/html
----------------------------
	#!/bin/bash
	yum update -y
	amazon-linux-extras install nginx1.12
	nginx -v
	systemctl start nginx
	systemctl enable nginx
	chmod 2775 /usr/share/nginx/html
	find /usr/share/nginx/html -type d -exec chmod 2775 {} \;
	find /usr/share/nginx/html -type f exec chmod 0664 {} \;
	echo "<h1> Hello to new user</h1>" /usr/share/nginx/html/index.html

3) appache 2nd server
----------------------------
	#!/bin/bash
	yum update -y
	amazon-linux-extras install -y lamp-mariadb10.2 php7.2
	yum install -y httpd mariadb-server
	systemctl start httpd
	systemctl enable httpd
	usermod -a -G apache ec2-user
	chown -R ec2-user:apache /var/www
	chmod 2775 /var/www	
	find /var/www -type d -exec chmod 2775 {} \;
	find /var/www -type f -exec chmod 0664 {} \;
	echo"<?php phpinfo(); ?>" > /var/www/html/phpinfo.php

Setting an env for node app
---------------------------------
	#!/bin/bash
	sudo -u ec2-user bash-c "echo\"
	TITLE=Title Set From Temolate
	\">/home/ec2-user/app.env
	
more user data
---------------
	#!/bin/bash

# Enable logs
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1

# Install Git
echo "Installing Git"
yum update -y
yum install git -y

# Install NodeJS
echo "Installing NodeJS"
touch .bashrc
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
. /.nvm/nvm.sh
nvm install --lts

# Clone website code
echo "Cloning website"
mkdir -p /demo-website
cd /demo-website
git clone https://github.com/academind/aws-demos.git .
cd dynamic-website-basic

# Install dependencies
echo "Installing dependencies"
npm install

# Create data directory (later => EBS)
echo "Creating data directory & file"
mkdir -p /demo/data
echo '{"topics": []}' | tee "/demo/data/data-storage.json"

# Forward port 80 traffic to port 3000
echo "Forwarding 80 -> 3000"
iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 3000

# Install & use pm2 to run Node app in background
echo "Installing & starting pm2"
npm install pm2@latest -g
pm2 start app.js

